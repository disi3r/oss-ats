generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model JobPosting {
  id          String  @id @default(cuid())
  title       String
  description String?
  linkedinUrl String?
  status      String  @default("Open")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  candidates Candidate[]

  processGroupId String
  processGroup   ProcessGroup @relation(fields: [processGroupId], references: [id])

  metadata Json @default("{}")
}

model Persona {
  id String @id @default(cuid())

  name    String
  surname String

  location String?

  email String @unique

  linkedinUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  candidates Candidate[]

  metadata Json @default("{}")
}

model Candidate {
  id String @id @default(cuid())

  notes     String?
  cvFileKey String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  personaId String
  persona   Persona @relation(fields: [personaId], references: [id])

  jobId String
  job   JobPosting @relation(fields: [jobId], references: [id])

  currentStepId String
  rating String?

  source String?

  steps         ProcessStep[] @relation("CandidateSteps")

  metadata Json @default("{}")
}

model ProcessGroup {
  id String @id @default(cuid())

  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  jobs         JobPosting[]
  steps        ProcessStepTemplate[]
  processSteps ProcessStep[]

  metadata Json @default("{}")
}

model ProcessStepTemplate {
  id String @id @default(cuid())

  order Int
  name  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  groupId String
  group   ProcessGroup @relation(fields: [groupId], references: [id])

  steps ProcessStep[]

  metadata Json @default("{}")
}

model ProcessStep {
  id String @id @default(cuid())

  status String @default("Pending")

  notes String?
  date  DateTime?

  rating String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  groupId String
  group   ProcessGroup @relation(fields: [groupId], references: [id])

  templateId String
  template   ProcessStepTemplate @relation(fields: [templateId], references: [id])

  candidateId String
  candidate   Candidate @relation("CandidateSteps", fields: [candidateId], references: [id])

  metadata Json @default("{}")
}
