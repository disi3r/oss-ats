generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model JobPosting {
  id          String      @id @default(cuid())
  title       String
  company     String
  location    String?
  description String?
  linkedinUrl String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  candidates  Candidate[]
}

model Persona {
  id         String      @id @default(cuid())
  name       String
  email      String      @unique
  linkedinUrl String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  candidates Candidate[]
}

model Candidate {
  id           String     @id @default(cuid())
  notes        String?
  status       String     @default("applied")
  cvUrl        String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  jobPosting   JobPosting @relation(fields: [jobPostingId], references: [id])
  jobPostingId String
  persona      Persona    @relation(fields: [personaId], references: [id])
  personaId    String
  process      Process?
}

model Process {
  id          String     @id @default(cuid())
  candidate   Candidate  @relation(fields: [candidateId], references: [id])
  candidateId String     @unique
  steps       Step[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Step {
  id        String   @id @default(cuid())
  type      String
  status    String
  notes     String?
  date      DateTime
  process   Process  @relation(fields: [processId], references: [id])
  processId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
